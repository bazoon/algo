На работе я сталкиваюсь в основном с веб-приложения, выполненными в виде Single Page Application. Анализировать сложность таких програм с одной стороны сложно, так как здесь нет
какого-то одного процесса, который бы выполнялся, но скорее есть программа реагирующая на действия пользователя - открыть таблицу, построить диаграмму, вывести отчет. Но с другой стороны, чаще всего сложность используемых алгоритмов составляет O(1) это разовые действия вне циклов и O(n) - это циклические действия - отображение данных из одного множества (ответ сервера) в другое (DOM элементы), расчеты связанные с обходом списка значений, обходы дерева.
В работе я не сталкивался почти никогда с алгоритмами сложность которых бы превышала O(n). С одним исключением. У нас есть проект связанный с построением календарно-сетевых графиков - это дерево где каждый узел может иметь произвольное количество узлов. Каждый узел - это работа, имеющая набор признаков (даты начала и окончания, и еще штук 30). Также каждая работа может зависеть от любого количества работ - связи имеют типы и в зависимости от типа происходи расчет. И вот самое интересное начинается когда есть большое дерево (несколько тысяч работы + несколько тысяч связей) и нужно изменить всего одну работу, но она запускает процесс перерасчета всего дерева. Я пытался определить его сложность, но не особо успешно, сам алгоритм написан не мной (это сторонняя библиотека) и не похож на те, с которыми я знаком. Там происходит обход дерева с учетом зависимостей работы, что может привести к полному перерасчету дерева. Я пробовал измерить сложность эмпирически, замерял время в зависимости от количества работ, потом подбирал уравнение с помощью линейной регресии (сервис wolfram alpha позволяет построить приблизительне уравнения из сырых данных).
Получилась все равно линейная зависимость, правда с большим коэффициентом, что то наподобие 1000 * O(n) и хотя в теории обычно такие коэффициенты не очень важны, в случае этой программы это оказалось критически важно - скорость ее работы очень мала, на графике с большим количеством связей время реакции идет на десятки секунд, а это не то что ожидает пользователь. Я думал над тем, как бы можно было изменить алгоритм, но не придумал, получается что все равно нужно перебрать все связи все пересчитать, иначе график будет не валидным.  